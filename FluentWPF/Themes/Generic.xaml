<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:SourceChord.FluentWPF">
    <local:AddValueConverter x:Key="addValueConverter" />
    <Style x:Key="AcrylicWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <DockPanel LastChildFill="True">
                            <Grid DockPanel.Dock="Top">
                                <TextBlock Text="Title"/>
                            </Grid>
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </DockPanel>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                      GlassFrameThickness="-1"
                      ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:AcrylicWindow}" BasedOn="{StaticResource AcrylicWindowStyle}">
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AcrylicWindow}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type local:ParallaxView}">
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ParallaxView}">
                    <ContentPresenter Margin="{TemplateBinding OffsetMargin}">
                        <ContentPresenter.Height>
                            <MultiBinding Converter="{StaticResource addValueConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:ParallaxView}}" Path="ActualHeight"/>
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:ParallaxView}}" Path="VerticalShift"/>
                            </MultiBinding>
                        </ContentPresenter.Height>
                        <ContentPresenter.Width>
                            <MultiBinding Converter="{StaticResource addValueConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:ParallaxView}}" Path="ActualWidth"/>
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:ParallaxView}}" Path="HorizontalShift"/>
                            </MultiBinding>
                        </ContentPresenter.Width>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
